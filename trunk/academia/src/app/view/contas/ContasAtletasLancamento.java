/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app.view.contas;

import app.controller.AtividadeController;
import app.controller.AtletaController;
import app.controller.ContaController;
import app.controller.FrequenciaController;
import app.model.Atleta;
import app.model.AtletaAtividade;
import app.model.Conta;
import app.model.tablemodel.AtividadesTableModel;
import app.model.tablemodel.ContaTableModel;
import conf.Global;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.TableCellRenderer;
import libs.Validador;

/**
 *
 * @author MafraWise
 */
public class ContasAtletasLancamento extends javax.swing.JDialog {

    private ContaController cc;
    private AtividadeController ac;
    private AtividadesTableModel atm;

    private int cliques;

    private static int idMov;
    private static String dataV;
    private static float valor;
    private static String situacaoMov;
    private static int linhaSelecionada;

    private static int linhaSelecionadaMov;
    private static int idAtividade;

    private static float valorAtividade;

    private Conta c;
    private ContaTableModel ctm;

    /**
     * Creates new form ContasAtletasLancamento
     */
    public ContasAtletasLancamento(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);

        atm = new AtividadesTableModel();
        tabelaAtividades.setModel(atm);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dadosPagamento = new javax.swing.JPanel();
        dataVencimentoTxt = new javax.swing.JFormattedTextField();
        dataEmissaoTxt = new javax.swing.JFormattedTextField();
        matriculaLabel = new javax.swing.JLabel();
        valorLabel = new javax.swing.JLabel();
        dataEmissaoLabel = new javax.swing.JLabel();
        dataVencimentoLabel = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaAtividades = new javax.swing.JTable();
        atletaLabel = new javax.swing.JLabel();
        nomeAtletaTxt = new javax.swing.JTextField();
        valorTxt = new javax.swing.JFormattedTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        obsTxt = new javax.swing.JTextArea();
        obsLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        contaTxt = new javax.swing.JTextField();
        matriculaTxt = new javax.swing.JFormattedTextField();
        jPanel2 = new javax.swing.JPanel();
        salvarBt = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaMovimentacao = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        quitarBt = new javax.swing.JButton();
        removerBt = new javax.swing.JButton();
        fecharBt = new javax.swing.JButton();
        atualizarBt = new javax.swing.JButton();
        reabrirBt = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Financeiro");
        setResizable(false);
        setType(java.awt.Window.Type.UTILITY);

        dadosPagamento.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados do pagamento"));

        try {
            dataVencimentoTxt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            dataEmissaoTxt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        dataEmissaoTxt.setToolTipText("Clique duas vezes para atlerar a data de emissão.");
        dataEmissaoTxt.setEnabled(false);
        Date date = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        String data = sdf.format(date);
        dataEmissaoTxt.setText(data);
        dataEmissaoTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataEmissaoTxtMouseClicked(evt);
            }
        });

        matriculaLabel.setText("Matrícula");

        valorLabel.setText("Valor");

        dataEmissaoLabel.setText("Data. Emissão");

        dataVencimentoLabel.setForeground(new java.awt.Color(255, 51, 51));
        dataVencimentoLabel.setText("Data. Vencimento");

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Atividades"));
        jPanel3.setToolTipText("Clique aqui para escolher uma atividade.");

        tabelaAtividades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelaAtividades.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaAtividadesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabelaAtividades);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        atletaLabel.setText("Atleta");

        nomeAtletaTxt.setEnabled(false);

        valorTxt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));

        obsTxt.setColumns(20);
        obsTxt.setRows(5);
        jScrollPane3.setViewportView(obsTxt);

        obsLabel.setText("Observação");

        jLabel1.setText("Conta");

        contaTxt.setEnabled(false);

        matriculaTxt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        matriculaTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matriculaTxtActionPerformed(evt);
            }
        });
        matriculaTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                matriculaTxtKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout dadosPagamentoLayout = new javax.swing.GroupLayout(dadosPagamento);
        dadosPagamento.setLayout(dadosPagamentoLayout);
        dadosPagamentoLayout.setHorizontalGroup(
            dadosPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dadosPagamentoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dadosPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dadosPagamentoLayout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(dadosPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, dadosPagamentoLayout.createSequentialGroup()
                                .addGroup(dadosPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dataEmissaoLabel)
                                    .addComponent(dataEmissaoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(dadosPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(dataVencimentoLabel)
                                    .addComponent(dataVencimentoTxt))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(dadosPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(dadosPagamentoLayout.createSequentialGroup()
                                        .addComponent(valorLabel)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(valorTxt)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, dadosPagamentoLayout.createSequentialGroup()
                                .addGroup(dadosPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(obsLabel, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(dadosPagamentoLayout.createSequentialGroup()
                        .addGroup(dadosPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(dadosPagamentoLayout.createSequentialGroup()
                                .addComponent(matriculaLabel)
                                .addGap(75, 75, 75))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dadosPagamentoLayout.createSequentialGroup()
                                .addComponent(matriculaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(19, 19, 19)))
                        .addGroup(dadosPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nomeAtletaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(atletaLabel))
                        .addGap(18, 18, 18)
                        .addGroup(dadosPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(contaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        dadosPagamentoLayout.setVerticalGroup(
            dadosPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dadosPagamentoLayout.createSequentialGroup()
                .addGroup(dadosPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(matriculaLabel)
                    .addComponent(atletaLabel)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dadosPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomeAtletaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(contaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(matriculaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(dadosPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(dadosPagamentoLayout.createSequentialGroup()
                        .addGroup(dadosPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(dadosPagamentoLayout.createSequentialGroup()
                                .addComponent(dataEmissaoLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dataEmissaoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(dadosPagamentoLayout.createSequentialGroup()
                                .addComponent(dataVencimentoLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dataVencimentoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(dadosPagamentoLayout.createSequentialGroup()
                                .addComponent(valorLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(valorTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(obsLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        salvarBt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon-check.png"))); // NOI18N
        salvarBt.setText("Salvar");
        salvarBt.setEnabled(false);
        salvarBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarBtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(salvarBt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(salvarBt)
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Movimentação"));

        tabelaMovimentacao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelaMovimentacao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaMovimentacaoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaMovimentacao);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        quitarBt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/hand_thumbsup.png"))); // NOI18N
        quitarBt.setText("Quitar");
        quitarBt.setEnabled(false);
        quitarBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitarBtActionPerformed(evt);
            }
        });

        removerBt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon-trash.png"))); // NOI18N
        removerBt.setText("Remover");
        removerBt.setEnabled(false);
        removerBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerBtActionPerformed(evt);
            }
        });

        fecharBt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon-cross.png"))); // NOI18N
        fecharBt.setText("Fechar");
        fecharBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fecharBtActionPerformed(evt);
            }
        });

        atualizarBt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon-refresh3.png"))); // NOI18N
        atualizarBt.setText("Atualizar");
        atualizarBt.setEnabled(false);
        atualizarBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizarBtActionPerformed(evt);
            }
        });

        reabrirBt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ui-check-boxes.png"))); // NOI18N
        reabrirBt.setText("Reabrir");
        reabrirBt.setEnabled(false);
        reabrirBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reabrirBtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(quitarBt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(removerBt, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
            .addComponent(fecharBt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(atualizarBt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(reabrirBt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(quitarBt, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(reabrirBt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atualizarBt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removerBt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 145, Short.MAX_VALUE)
                .addComponent(fecharBt))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dadosPagamento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 9, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dadosPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(236, 236, 236)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dataEmissaoTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataEmissaoTxtMouseClicked
        int clique = evt.getClickCount();
        if (clique > 1) {
            dataEmissaoTxt.setEnabled(true);
        }
    }//GEN-LAST:event_dataEmissaoTxtMouseClicked

    private void tabelaAtividadesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaAtividadesMouseClicked
        if (tabelaAtividades.getModel().getRowCount() > 0) {
            linhaSelecionada = tabelaAtividades.getSelectedRow();
            if (linhaSelecionada == -1) {
                linhaSelecionada = 0;
            }
            int coluna = tabelaAtividades.getSelectedColumn();

            idAtividade = (int) tabelaAtividades.getModel().getValueAt(tabelaAtividades.convertRowIndexToModel(linhaSelecionada), 0);

            valorAtividade = (float) tabelaAtividades.getModel().getValueAt(tabelaAtividades.convertRowIndexToModel(linhaSelecionada), 2);

            cc = new ContaController();
            contaTxt.setText(cc.retornaIdConta());

            /*Se tive setado os valores vai resetar*/
            valorTxt.setText(Float.toString(valorAtividade).replace(".", ","));
            obsTxt.setText("");
            Date date = new Date();
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            String data = sdf.format(date);
            dataEmissaoTxt.setText(data);

            salvarBt.setEnabled(true);
            atualizarBt.setEnabled(false);

        }
    }//GEN-LAST:event_tabelaAtividadesMouseClicked

    private void salvarBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarBtActionPerformed
        cc = new ContaController();
        String msg = "";

        Validador.validaData(dataEmissaoTxt.getText(), dataVencimentoTxt.getText(), 9);

        String dataE = Validador.data(dataEmissaoTxt.getText(), 10);
        String dataV = Validador.data(dataVencimentoTxt.getText(), 10);

        if (Validador.erros == 0) {
            int matricula = Integer.parseInt(matriculaTxt.getText());
            c = new Conta();
            c.setId(Integer.parseInt(contaTxt.getText()));
            c.setLancamento(dataE);
            c.setValor_total(Float.parseFloat(valorTxt.getText().toString().replace(",", ".")));
            c.setSituacao("A");
            c.setVencimento(dataV);
            c.setObservacao(obsTxt.getText());

            if (cc.cadastrarConta(c, matricula) == true) {

                ctm = new ContaTableModel();
                ctm = (ContaTableModel) tabelaMovimentacao.getModel();

                String dataLan = null;
                String dataVen = null;

                try {/*Formata datas*/

                    Date date = new SimpleDateFormat("yyyy-MM-dd").parse(c.getLancamento());
                    Date date2 = new SimpleDateFormat("yyyy-MM-dd").parse(c.getVencimento());
                    dataLan = new SimpleDateFormat("dd/MM/yyyy").format(date);
                    dataVen = new SimpleDateFormat("dd/MM/yyyy").format(date2);

                } catch (ParseException ex) {

                }

                ctm.addRow(c.getId(), dataLan, dataVen, c.getValor_total(), "Aberto", 1);

                salvarBt.setEnabled(false);
                valorTxt.setText("");
                dataVencimentoTxt.setText("");
                contaTxt.setText("");
                tabelaAtividades.clearSelection();
            }
        } else {
            for (int i = 0; i < 15; i++) {//Lista os erros
                for (int j = 0; j < 5; j++) {
                    if (null != Validador.arrayErros[i][j]) {
                        msg = msg + Validador.arrayErros[i][j];
                    }

                }
            }

            JOptionPane.showMessageDialog(null, msg, "Erros", JOptionPane.ERROR_MESSAGE);
            Validador.erros = 0;
            for (int i = 0; i < 15; i++) {// Apaga os erros para não se acumular.
                for (int j = 0; j < 5; j++) {
                    if (null != Validador.arrayErros[i][j]) {
                        Validador.arrayErros[i][j] = "";
                    }

                }
            }
        }
    }//GEN-LAST:event_salvarBtActionPerformed

    private void tabelaMovimentacaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaMovimentacaoMouseClicked
        cliques = evt.getClickCount();

        if (cliques > 1) {
            cc = new ContaController();
            List<Conta> cl;
            cl = cc.retornaContaSelecionada(idMov);

            contaTxt.setText(String.valueOf(cl.get(0).getId()));
            dataEmissaoTxt.setText(cl.get(0).getLancamento());
            dataVencimentoTxt.setText(cl.get(0).getVencimento());
            String valor = Float.toString(cl.get(0).getValor_total());
            valorTxt.setText(valor.replace(".", ","));
            obsTxt.setText(cl.get(0).getObservacao());

            atualizarBt.setEnabled(true);
            salvarBt.setEnabled(false);
        }

        if (tabelaMovimentacao.getModel().getRowCount() > 0) {
            linhaSelecionadaMov = tabelaMovimentacao.getSelectedRow();
            int coluna = tabelaMovimentacao.getSelectedColumn();

            idMov = (int) tabelaMovimentacao.getModel().getValueAt(linhaSelecionadaMov, 0);
            dataV = (String) tabelaMovimentacao.getModel().getValueAt(linhaSelecionadaMov, 2);
            valor = (float) tabelaMovimentacao.getModel().getValueAt(linhaSelecionadaMov, 3);
            situacaoMov = (String) tabelaMovimentacao.getModel().getValueAt(linhaSelecionadaMov, 4);

            reabrirBt.setEnabled(true);
            removerBt.setEnabled(true);
            quitarBt.setEnabled(true);
        }
    }//GEN-LAST:event_tabelaMovimentacaoMouseClicked

    private void quitarBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitarBtActionPerformed
        cc = new ContaController();
        String matricula = matriculaTxt.getText();
        if (situacaoMov.equals("Pago")) {
            JOptionPane.showMessageDialog(null, "A conta ja está quitada.", "Alerta", JOptionPane.INFORMATION_MESSAGE);

        } else {

            /*Se o atleta estivar desativado pergunta se deseja ativar*/
            AtletaController ac = new AtletaController();
            if (ac.retornaSituacaoAtleta(Integer.parseInt(matricula)).equals("N")) {

                int dialogResultado2 = JOptionPane.showConfirmDialog(null, "O atleta está inativo deseja ativalo?");
                if (dialogResultado2 == JOptionPane.YES_OPTION) {
                    if (ac.ativarAtleta(Integer.parseInt(matricula)) == true) {
                        int dialogResultado3 = JOptionPane.showConfirmDialog(null, "Atleta ativado. Deseja adicioná-lo na ata de presença?");
                        if (dialogResultado3 == JOptionPane.YES_OPTION) {

                            Atleta a = new Atleta();
                            a = ac.retornaAtleta(Integer.parseInt(matricula));
                            FrequenciaController fc = new FrequenciaController();
                            fc.addNaFrequencia(a.getId());
                        }
                    }

                } else if (dialogResultado2 == JOptionPane.NO_OPTION) {
                    // System.err.println("Não");
                } else if (dialogResultado2 == JOptionPane.CANCEL_OPTION) {
                    // System.err.println("Cancelado");
                }
            }

            if (cc.quitarConta(idMov) == true) {

                int dialogResultado = JOptionPane.showConfirmDialog(null, "Deseja gerar um novo lançamento com este atleta?");
                if (dialogResultado == JOptionPane.YES_OPTION) { /*Se sim*/

                    if (cc.lancamentoRapido(dataV, valor, null, matriculaTxt.getText(), tabelaMovimentacao) == true) {
                        JOptionPane.showMessageDialog(null, "Lançamento concluido.", "Alerta", JOptionPane.INFORMATION_MESSAGE);

                        ctm = new ContaTableModel();
                        ctm = (ContaTableModel) tabelaMovimentacao.getModel();
                        ctm.setValueAt("Pago", linhaSelecionadaMov, 4); /*Atualiza*/

                        linhaSelecionadaMov = 0;
                        idMov = 0;
                        dataV = null;
                        valor = 0;

                        reabrirBt.setEnabled(false);
                        quitarBt.setEnabled(false);
                        removerBt.setEnabled(false);
                    }
                } else { /*Se não */

                    ctm = new ContaTableModel();
                    ctm = (ContaTableModel) tabelaMovimentacao.getModel();
                    ctm.setValueAt("Pago", linhaSelecionadaMov, 4); /*Atualiza*/

                    linhaSelecionada = 0;
                    idMov = 0;
                    dataV = null;
                    valor = 0;

                    reabrirBt.setEnabled(false);
                    quitarBt.setEnabled(false);
                    removerBt.setEnabled(false);
                }

            }
        }
    }//GEN-LAST:event_quitarBtActionPerformed

    private void removerBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerBtActionPerformed
        cc = new ContaController();
        if (cc.removerConta(idMov) == true) {

            ctm = (ContaTableModel) tabelaMovimentacao.getModel();
            ctm.removeRow(ContasAtletasView.linhaSelecionadaMov);
            tabelaMovimentacao.clearSelection();

            reabrirBt.setEnabled(false);
            reabrirBt.setEnabled(false);
            quitarBt.setEnabled(false);
            removerBt.setEnabled(false);
        }
    }//GEN-LAST:event_removerBtActionPerformed

    private void fecharBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fecharBtActionPerformed
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_fecharBtActionPerformed

    private void atualizarBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizarBtActionPerformed
        cc = new ContaController();

        String msg = "";

        String dataE = Validador.data(dataEmissaoTxt.getText(), 10);
        String dataV = Validador.data(dataVencimentoTxt.getText(), 10);

        if (Validador.erros == 0) {

            c = new Conta();
            c.setId(Integer.parseInt(contaTxt.getText()));
            c.setLancamento(dataE);
            c.setValor_total(Float.parseFloat(valorTxt.getText().toString().replace(",", ".")));
            c.setVencimento(dataV);
            c.setObservacao(obsTxt.getText());

            if (cc.atualizar(c) == true) {
                tabelaMovimentacao.clearSelection();
                ctm = new ContaTableModel();
                ctm = (ContaTableModel) tabelaMovimentacao.getModel();
                ctm.setValueAt(c.getId(), linhaSelecionadaMov, 0);
                ctm.setValueAt(dataEmissaoTxt.getText(), linhaSelecionadaMov, 1);
                ctm.setValueAt(dataVencimentoTxt.getText(), linhaSelecionadaMov, 2);
                ctm.setValueAt(c.getValor_total(), linhaSelecionadaMov, 3);
                reabrirBt.setEnabled(false);
                quitarBt.setEnabled(false);
                removerBt.setEnabled(false);
                atualizarBt.setEnabled(false);
            }
        } else {
            for (int i = 0; i < 15; i++) {//Lista os erros
                for (int j = 0; j < 5; j++) {
                    if (null != Validador.arrayErros[i][j]) {
                        msg = msg + Validador.arrayErros[i][j];
                    }

                }
            }

            JOptionPane.showMessageDialog(null, msg, "Erros", JOptionPane.ERROR_MESSAGE);
            Validador.erros = 0;
            for (int i = 0; i < 15; i++) {// Apaga os erros para não se acumular.
                for (int j = 0; j < 5; j++) {
                    if (null != Validador.arrayErros[i][j]) {
                        Validador.arrayErros[i][j] = "";
                    }

                }
            }
        }

    }//GEN-LAST:event_atualizarBtActionPerformed

    private void reabrirBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reabrirBtActionPerformed
        cc = new ContaController();
        if (cc.reabrirConta(idMov) == true) {
            ctm = new ContaTableModel();
            ctm = (ContaTableModel) tabelaMovimentacao.getModel();
            ctm.setValueAt("Aberto", linhaSelecionadaMov, 4);

        }

        reabrirBt.setEnabled(false);
        quitarBt.setEnabled(false);
        removerBt.setEnabled(false);
        atualizarBt.setEnabled(false);
    }//GEN-LAST:event_reabrirBtActionPerformed

    private void matriculaTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matriculaTxtActionPerformed
        carregarDados();
    }//GEN-LAST:event_matriculaTxtActionPerformed

    private void matriculaTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_matriculaTxtKeyPressed
        salvarBt.setEnabled(false);
        quitarBt.setEnabled(false);
        reabrirBt.setEnabled(false);
        atualizarBt.setEnabled(false);
        removerBt.setEnabled(false);
        
        atm = new AtividadesTableModel();
        ctm = new ContaTableModel();
        
        tabelaAtividades.setModel(atm);
        tabelaMovimentacao.setModel(ctm);
        
        nomeAtletaTxt.setText("");
        dataVencimentoTxt.setText("");
        contaTxt.setText("");
        valorTxt.setText("");

        cliques = 0;
        idMov = 0;
        dataV = "";
        valor = 0;
        situacaoMov = "";
        linhaSelecionada = 0;
        linhaSelecionadaMov = 0;
        idAtividade = 0;
        valorAtividade = 0;


    }//GEN-LAST:event_matriculaTxtKeyPressed

    public void carregarDados() {
        int matricula = 0;
        String matriculaTexto = matriculaTxt.getText();

        if (!matriculaTexto.matches("[0-9]+")) {
            matriculaTxt.setText("");
            JOptionPane.showMessageDialog(null, "Digite somente números", "Erros", JOptionPane.ERROR_MESSAGE);

        } else {

            if (!"".equals(matriculaTexto)) {
                matricula = Integer.parseInt(matriculaTexto);
            }

            if (matricula != 0) {
                cc = new ContaController();
                ac = new AtividadeController();
                List<AtletaAtividade> aa = cc.retornaAtividadesAtleta(matricula);
                if (aa.size() > 0) {
                    atm = new AtividadesTableModel(aa);
                    tabelaAtividades.setModel(atm);
                    tabelaAtividades.getColumnModel().getColumn(0).setPreferredWidth(5); //ID.
                    tabelaAtividades.getColumnModel().getColumn(1).setPreferredWidth(100); //NOME.

                    nomeAtletaTxt.setText(aa.get(0).getNomeAtleta());

                    tabelaMovimentacao.setModel(cc.listarContas(matricula));
                    tabelaMovimentacao.getColumnModel().getColumn(0).setPreferredWidth(10); //ID.
                    TableCellRenderer defaultRenderer = tabelaMovimentacao.getDefaultRenderer(Object.class
                    );
                    TableCellRenderer r = new ContasCellRender(defaultRenderer);

                    tabelaMovimentacao.getColumnModel()
                            .getColumn(4).setCellRenderer(r);
                } else {
                    JOptionPane.showMessageDialog(null, "Nenhum registro encontrado.", "Erros", JOptionPane.ERROR_MESSAGE);
                }
            }
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if (Global.TEMA.equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ContasAtletasLancamento.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ContasAtletasLancamento.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ContasAtletasLancamento.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ContasAtletasLancamento.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ContasAtletasLancamento dialog = new ContasAtletasLancamento(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel atletaLabel;
    private javax.swing.JButton atualizarBt;
    public javax.swing.JTextField contaTxt;
    private javax.swing.JPanel dadosPagamento;
    private javax.swing.JLabel dataEmissaoLabel;
    public static javax.swing.JFormattedTextField dataEmissaoTxt;
    private javax.swing.JLabel dataVencimentoLabel;
    public static javax.swing.JFormattedTextField dataVencimentoTxt;
    private javax.swing.JButton fecharBt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel matriculaLabel;
    private javax.swing.JFormattedTextField matriculaTxt;
    public javax.swing.JTextField nomeAtletaTxt;
    private javax.swing.JLabel obsLabel;
    private javax.swing.JTextArea obsTxt;
    private javax.swing.JButton quitarBt;
    private javax.swing.JButton reabrirBt;
    private javax.swing.JButton removerBt;
    private javax.swing.JButton salvarBt;
    public static javax.swing.JTable tabelaAtividades;
    public static javax.swing.JTable tabelaMovimentacao;
    private javax.swing.JLabel valorLabel;
    private javax.swing.JFormattedTextField valorTxt;
    // End of variables declaration//GEN-END:variables
}
